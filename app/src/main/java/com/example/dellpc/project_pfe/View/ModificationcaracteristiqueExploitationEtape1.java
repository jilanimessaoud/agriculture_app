package com.example.dellpc.project_pfe.View;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;

import com.example.dellpc.project_pfe.Controleur.ConnectionDetector;
import com.example.dellpc.project_pfe.Controleur.ControleurOccupSol;
import com.example.dellpc.project_pfe.Model.Caracteristique_exploitation;
import com.example.dellpc.project_pfe.R;
import com.example.dellpc.project_pfe.dataBase.DAOSQlite;

public class ModificationcaracteristiqueExploitationEtape1 extends AppCompatActivity implements DoalogVerfieirNExploitation.DialogListener {
    ImageButton buttonSuiv , buttonPed ;
    Button buttonInfo ;
    Bundle bundle ;
    EditText numExploitation ,superficieTotale ,superficieLabourable,superficieCultiv ,superIrrigable,nBempl ;
    ControleurOccupSol controleurOccupSol ;
    ConnectionDetector connectionDetector ;
    boolean connectionInternet ;
    DAOSQlite DAOSQlite;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.occupataion_sol_etape1);
        intial();
        setView();
    }
    void intial()
    {
        bundle =getIntent().getExtras();
        bundle.putInt("modification",1);
        buttonInfo = (Button)findViewById(R.id.info);

        superficieCultiv= (EditText)findViewById(R.id.Spcultiv);
        superficieTotale= (EditText)findViewById(R.id.SPtotale);
        superficieLabourable= (EditText)findViewById(R.id.SpLAb);
        superIrrigable = (EditText)findViewById(R.id.spIrrig);
        nBempl = (EditText)findViewById(R.id.nbempl);
        buttonPed = (ImageButton) findViewById(R.id.imageButtonPredOccup) ;
        buttonSuiv = (ImageButton)findViewById(R.id.imageButtonSuivaOccup);

    }
    void setView()
    {

        controleurOccupSol = new ControleurOccupSol(this,superficieTotale,superficieLabourable,superficieCultiv,superIrrigable,nBempl,bundle,getSupportFragmentManager(),numExploitation,ModificationcaracteristiqueExploitationEtape1.this);
        buttonPed.setOnClickListener(controleurOccupSol);
        buttonSuiv.setOnClickListener(controleurOccupSol);
        buttonInfo.setOnClickListener(controleurOccupSol);
        if (bundle.getInt("etape")!=1)
        {
            numExploitation.setText(bundle.getString("numExploitation"));
            superficieTotale.setText(bundle.getString("superficieTotale"));
            superficieLabourable.setText(bundle.getString("superficieLabourable"));
            superficieCultiv.setText(bundle.getString("superficieCultiv"));
            superIrrigable.setText(bundle.getString("superIrrigable"));
            nBempl.setText(bundle.getString("nBempl"));
        }

    }

    @Override
    public void ApplyCode(String code) {
        connectionDetector = new ConnectionDetector(this);
        connectionInternet = connectionDetector.isConnected();
        DAOSQlite = new DAOSQlite(this);
        Caracteristique_exploitation caracteristique_exploitation;
        numExploitation.setText(String.valueOf(code));

        if (bundle.getInt("modification") == 1)
        {
            if (connectionInternet) {
           //     DAOModificationJuson modificationJuson = new DAOModificationJuson(ModificationcaracteristiqueExploitationEtape1.this, this);
             //   modificationJuson.getCarcteristiqueExpEtape1(superficieTotale, superficieLabourable, superficieCultiv, superIrrigable, nBempl, numExploitation);
            } else
                {
                caracteristique_exploitation = DAOSQlite.getCaraExploitation(code);
                superficieTotale.setText(String.valueOf(caracteristique_exploitation.getSpTotale()));
                superficieLabourable.setText(String.valueOf(caracteristique_exploitation.getSpLabourable()));
                superficieCultiv.setText(String.valueOf(caracteristique_exploitation.getSpCultivee()));
                superIrrigable.setText(String.valueOf(caracteristique_exploitation.getSpIrrigable()));
                nBempl.setText(String.valueOf(caracteristique_exploitation.getNombreEmploiyer()));
            }
        }
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menusortie,menu);
        return true;
    }


    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        Intent intent ;
        if (id ==R.id.itmexit)

        {
        }


        return super.onOptionsItemSelected(item);
    }
}
