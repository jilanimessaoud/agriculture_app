package com.example.dellpc.project_pfe.View;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.example.dellpc.project_pfe.Controleur.ConnectionDetector;
import com.example.dellpc.project_pfe.Controleur.ControleurModificationIdentificationExploitation;
import com.example.dellpc.project_pfe.Json.DAOModificationJuson;
import com.example.dellpc.project_pfe.Model.Delegation;
import com.example.dellpc.project_pfe.Model.Exploitation;
import com.example.dellpc.project_pfe.Model.Secteur;
import com.example.dellpc.project_pfe.R;
import com.example.dellpc.project_pfe.dataBase.DAOSQlite;

import java.util.ArrayList;

public class ModificationIdentificationExploitation extends AppCompatActivity implements ViewDialog.codeLieuxListener ,View.OnClickListener,DoalogVerfieirNExploitation.DialogListener {
    Button button_info1,button_info2,button_info ,info,suivant,exit;
    int valueEditText ;
    int idButton = 0 ;
    ArrayList<String> list ;

    ArrayList<Delegation>listDelegation ;
    ArrayList<Secteur>listSecteur  ;
    DAOSQlite DAOSQlite;
    EditText textDelegation ,textSecteur ,cinGerant,cinExploitant,codeExploitation;
    Button buttonSave ;
    Bundle bundle ;
    Exploitation  exploitation ;
    ConnectionDetector connectionDetector ;
    ControleurModificationIdentificationExploitation controleurModification ;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_modification_identification_exploitation);
        initial();
        setView();
    }
    void initial()
    {
        connectionDetector = new ConnectionDetector(this) ;
        DAOSQlite = new DAOSQlite(this);
        listSecteur = new ArrayList<>() ;
        listDelegation=new ArrayList<>();
        bundle =getIntent().getExtras();
        cinExploitant = (EditText)findViewById(R.id.textExploitant);
        cinGerant = (EditText)findViewById(R.id.textgerant);
        textDelegation = (EditText)findViewById(R.id.zonedelegation) ;
        textSecteur =(EditText) findViewById(R.id.zoneSecteur) ;
        button_info1 = (Button)findViewById(R.id.buttonInfoSecteur);
        button_info = (Button)findViewById(R.id.buttonInfoDelegation);
        info=(Button)findViewById(R.id.info);
        exit = (Button) findViewById(R.id.exit) ;
        codeExploitation = (EditText)findViewById(R.id.codeExploitation) ;
        suivant= (Button)findViewById(R.id.suivant) ;
    }
    public  void alert()
    {
        ViewDialog viewDialog = new ViewDialog();
        viewDialog.setListeDelegation(listLabelDelegation());
        viewDialog.show(getSupportFragmentManager(),"ok");

    }

    void setView() {
        button_info.setOnClickListener(this);
        button_info1.setOnClickListener(this);
        listDelegation = DAOSQlite.getAllDelegation();

        controleurModification = new ControleurModificationIdentificationExploitation(ModificationIdentificationExploitation.this, this, codeExploitation, textSecteur, textDelegation, cinGerant, cinExploitant, getSupportFragmentManager(), bundle);

        info.setOnClickListener(controleurModification);
        codeExploitation.addTextChangedListener( controleurModification.textWatcher);
        suivant.setOnClickListener(controleurModification);
    }

    @Override
    public void applyCode(int code)
    {
        EditText editText = (EditText)findViewById(valueEditText);
        if (idButton == R.id.buttonInfoSecteur)
        {editText.setText(String.valueOf(listSecteur.get(code).getCode_secteur()),TextView.BufferType.EDITABLE);}
        else editText.setText(String.valueOf(listDelegation.get(code).getCodeDelegation()),TextView.BufferType.EDITABLE);

    }

    /**
     * Called when a view has been clicked.
     *
     * @param v The view that was clicked.
     */
    @Override
    public void onClick(View v) {
        switch (v.getId())
        {
            case R.id.buttonInfoDelegation :
                textDelegation.setError(null);
                textSecteur.setText("");
                idButton = R.id.buttonInfoDelegation ;
                alert();
                valueEditText =R.id.zonedelegation ;
                break;
            case R.id.buttonInfoSecteur :
                textSecteur.setError(null);
                idButton = R.id.buttonInfoSecteur ;
                String codeDelegation = textDelegation.getText().toString();
                listSecteur= DAOSQlite.getAllSecteur(codeDelegation);
                ViewDialog viewDialog = new ViewDialog();

                viewDialog.setListeDelegation(listLabelSecteur());
                viewDialog.show(getSupportFragmentManager(),"ok");
                valueEditText =R.id.zoneSecteur ;
                break;


        }
    }

    ArrayList <String> listLabelDelegation ()
    {
        ArrayList <String> listLabelDelegationDElegation = new ArrayList<>();
        for (int i = 0 ; i<listDelegation.size();i++)
        {
            listLabelDelegationDElegation.add(listDelegation.get(i).getLabel());
        }
        return listLabelDelegationDElegation ;
    }
    ArrayList <String> listLabelSecteur ()
    {
        ArrayList <String> listLabelSecteur = new ArrayList<>();
        for (int i = 0 ; i<listSecteur.size();i++)
        {
            listLabelSecteur.add(listSecteur.get(i).getLabel());
        }
        return listLabelSecteur ;
    }

    @Override
    public void ApplyCode(String code) {
        codeExploitation.setError(null);
        codeExploitation.setText(code);
        cinExploitant.setText(null);
        cinGerant.setText(null);
        textSecteur.setText(null);
        textDelegation.setText(null);
        textSecteur.setError(null);
        textDelegation.setError(null);
        cinGerant.setError(null);
        cinExploitant.setError(null);
        /// cas connection internet
        if (!connectionDetector.isConnected()) getExploitationSqlite();
        // ne pas un connection internet
        else
            {
                DAOModificationJuson modificationJuson = new DAOModificationJuson(ModificationIdentificationExploitation.this,this);
                modificationJuson.chercher(codeExploitation,cinGerant,cinExploitant,textDelegation,textSecteur,0,bundle);

            }

    }

    void getExploitationSqlite () {
        DAOSQlite = new DAOSQlite(this) ;
        if (testInteger(codeExploitation)) {
            exploitation = DAOSQlite.getExploitation(codeExploitation.getText().toString());
            if (exploitation == null)
            {
                // codeExploitation.setError("VÃ©rifier");
                textSecteur.setText(null);
                textDelegation.setText(null);
                cinGerant.setText(null);
                cinExploitant.setText(null);

            } else {
                textSecteur.setText(String.valueOf(exploitation.getSecteur()));
                cinGerant.setText(exploitation.getCinGerant());
                cinExploitant.setText(exploitation.getCinExploitant());
                textDelegation.setText(DAOSQlite.getDelegation(String.valueOf(exploitation.getSecteur())));

            }
        }
    }
    boolean testInteger(EditText editText )
    {
        try {
            Integer.parseInt(editText.getText().toString()) ;
            return true ;
        } catch (NumberFormatException e) {

            return false ;
        }
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menusortie,menu);
        return true;
    }


    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        Intent intent ;
        if (id ==R.id.itmexit)

        {
        }


        return super.onOptionsItemSelected(item);
    }
}


