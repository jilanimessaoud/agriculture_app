package com.example.dellpc.project_pfe.View;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

import com.example.dellpc.project_pfe.Controleur.ConnectionDetector;
import com.example.dellpc.project_pfe.Json.DAOModificationJuson;
import com.example.dellpc.project_pfe.Model.TypeProduit;
import com.example.dellpc.project_pfe.R;
import com.example.dellpc.project_pfe.dataBase.DAOSQlite;

import java.util.ArrayList;

public class ProduitExploitation extends AppCompatActivity implements View.OnClickListener {
    Bundle bundle ;
    boolean connectionInternet  ;
    ConnectionDetector connectionDetector ;
    ListView listView  ;
    ArrayList<String>listeCntProduit = new ArrayList<>();
    DAOSQlite DAOSQlite;
    Button buttonSave ,buttonBAss ,retour;
    ArrayList<TypeProduit> typeProduits=new ArrayList<>();
    ArrayList<String> listLebelProduit=new ArrayList<>() ;
    ArrayList<Double>listeValeurDouble  =new ArrayList<>() ;
    ArrayList<Integer>listeValeurInteger  =new ArrayList<>() ;
    ArrayList<String> listLebelProduitEtValeur =new ArrayList<>();
    ArrayList<Integer>listCodeTypeProduit = new ArrayList<>() ;
    ArrayList<com.example.dellpc.project_pfe.Model.ProduitExploitation>listeProduitExploitations = new ArrayList<>() ;
    TextView titre ;

    DAOModificationJuson modificationJuson ;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_modification_liste_produit);
        intial();

    }

    void intial()
    {
        connectionDetector = new ConnectionDetector(this) ;
        connectionInternet = connectionDetector.isConnected();
        View viewInf=getLayoutInflater().inflate(R.layout.liste_produit,null);
        modificationJuson = new DAOModificationJuson(ProduitExploitation.this,this) ;
        bundle =getIntent().getExtras();
        TypeProduit typeProduit = new TypeProduit() ;
        DAOSQlite =new DAOSQlite(this) ;
        typeProduits = DAOSQlite.getlistProduct(bundle.getString("code"));
        listLebelProduit= typeProduit.getLabels(typeProduits) ;
        listView = (ListView)findViewById(R.id.liste) ;
        retour=(Button)findViewById(R.id.Retour);
        buttonSave = (Button)findViewById(R.id.sauvegarder);
        intListValeur();

        if (bundle.getInt("modification") == 0)
        {
            CustomorAdapteur customorAdapteur = new CustomorAdapteur() ;
            listView.setAdapter(customorAdapteur);
        }

       else
        {
                  if (connectionInternet)
                          {
          modificationJuson.getTypeProduit(viewInf,bundle,listView,buttonSave,getSupportFragmentManager(),listCodeTypeProduit);

                          }


                          else
                          {

                             CustomorAdapteur customorAdapteur = new CustomorAdapteur() ;
                             listView.setAdapter(customorAdapteur);
                             listeProduitExploitations = DAOSQlite.getExploitationTypeProduit(bundle.getString("exploitation") , bundle.getString("code"));
                             getListeTpeProduitExploitation() ;
                            }

        }


        buttonSave.setOnClickListener(this);
        retour.setOnClickListener(this);
        titre=(TextView)findViewById(R.id.titre) ;
        titre.setText(bundle.getString("titre"));

    }
    void intListValeur()
    {
        for(int i = 0;i<listLebelProduit.size();i++ )
        {
            listeValeurDouble.add(0.0) ;
            listeValeurInteger.add(0);
            listCodeTypeProduit.add(typeProduits.get(i).getIdType());
        }
    }


    boolean testInteger (String text)
    {
        try {
            Integer.parseInt(text);
            return  true ;
        } catch (NumberFormatException e) {
            e.printStackTrace();
            return false ;
        }
    }
    boolean testDouble(String text )

    {
        try {
            Double.parseDouble(text);
            return true ;
        } catch (NumberFormatException e) {
            e.printStackTrace();
            return false ;
        }
    }
    ///retourner un  string (code de produit +nombre )
    String stringAjoutDouble(ArrayList<Double>listeValeur,ArrayList<Integer> listeCodeTypeProduit)
    {
        String result ="";
        for (int i = 0 ; i<listeValeur.size();i++)
        {
            result=result+String.valueOf(listeCodeTypeProduit.get(i))+":"+String.valueOf(listeValeur.get(i))+",";
        }
        return result ;
    }
    String stringAjoutInteger(ArrayList<Integer>listeValeur,ArrayList<Integer> listeCodeTypeProduit)
    {
        String result ="";
        for (int i = 0 ; i<listeValeur.size();i++)
        {
            result=result+String.valueOf(listeCodeTypeProduit.get(i))+":"+String.valueOf(listeValeur.get(i))+",";
        }
        return result ;
    }
    /**
     * Called when a view has been clicked.
     *
     * @param v The view that was clicked.
     */
    @Override
    public void onClick(View v) {
      Intent intent ;
      connectionDetector=new ConnectionDetector(this);
      connectionInternet=connectionDetector.isConnected();
      DAOSQlite =new DAOSQlite(this);
        if (v.getId()==R.id.sauvegarder)
        {



                    ViewDialogSubmit viewDialogSubmit = new ViewDialogSubmit() ;
                    viewDialogSubmit.setBundle(bundle);


                    if (bundle.getInt("double")==1)
                    {

                                if  (bundle.getInt("modification")==0)
                                {

                                    viewDialogSubmit.seTValeuProduit(bundle.getString("code"), stringAjoutDouble(listeValeurDouble, listCodeTypeProduit), bundle.getString("exploitation"), this, ProduitExploitation.this,null,listCodeTypeProduit,listeValeurDouble);
                                    viewDialogSubmit.show(getSupportFragmentManager(),null);

                                }
                                else
                                    {
                                        if (!connectionInternet)
                                        {
                                            viewDialogSubmit.seTValeuProduit(bundle.getString("code"), stringAjoutDouble(listeValeurDouble, listCodeTypeProduit), bundle.getString("exploitation"), this, ProduitExploitation.this,null,listCodeTypeProduit,listeValeurDouble);
                                            viewDialogSubmit.show(getSupportFragmentManager(),null);

                                        }
                                    }
                    }

                    else
                    {

                        if  (bundle.getInt("modification")==0)
                        {

                            viewDialogSubmit.seTValeuProduit(bundle.getString("code"),stringAjoutInteger(listeValeurInteger,listCodeTypeProduit),bundle.getString("exploitation"),this,ProduitExploitation.this,listeValeurInteger,listCodeTypeProduit,null);
                            viewDialogSubmit.show(getSupportFragmentManager(),null);

                        }

                        else
                        {
                                if (!connectionInternet)
                                {
                                    viewDialogSubmit.seTValeuProduit(bundle.getString("code"), stringAjoutDouble(listeValeurDouble, listCodeTypeProduit), bundle.getString("exploitation"), this, ProduitExploitation.this,null,listCodeTypeProduit,listeValeurDouble);
                                    viewDialogSubmit.show(getSupportFragmentManager(),null);

                                }
                        }



                    }



        }

        else

            {
                    intent = new Intent(getApplicationContext(), ChoixTypeProduit.class);
                    intent.putExtras(bundle);
                    startActivity(intent);

            }
    }
    void getListeTpeProduitExploitation()
    {
        com.example.dellpc.project_pfe.Model.ProduitExploitation produitExploitation ;
        listeProduitExploitations = DAOSQlite.getExploitationTypeProduit(bundle.getString("exploitation") , bundle.getString("code"));

    for (int i= 0;i<listeProduitExploitations.size();i++)
    {
        produitExploitation = listeProduitExploitations.get(i) ;
        listeCntProduit.add(produitExploitation.getCnt()) ;

    }
    }
    class CustomorAdapteur extends BaseAdapter
    {
        public CustomorAdapteur() { }

        @Override
        public int getCount() {


            return listLebelProduit.size();
        }

        @Override
        public Object getItem(int position) {
            return null;
        }

        @Override
        public long getItemId(int position) {
            return 0;
        }

        @Override
        public View getView(final int position, View convertView, ViewGroup parent) {
            convertView=getLayoutInflater().inflate(R.layout.liste_produit,null);
            final TextView textView = convertView.findViewById(R.id.produit) ;
            final EditText editText  =convertView.findViewById(R.id.cnt) ;
            textView.setText(listLebelProduit.get(position));
            if (bundle.getInt("modification") != 0) editText.setText(listeCntProduit.get(position));
            editText.addTextChangedListener(new TextWatcher() {
                @Override
                public void beforeTextChanged(CharSequence s, int start, int count, int after) {

                }

                @Override
                public void onTextChanged(CharSequence s, int start, int before, int count)
                {
                    if (bundle.getInt("double")==1) {

                        if (testDouble(editText.getText().toString()))
                            listeValeurDouble.set(position, Double.parseDouble(editText.getText().toString()));
                        else editText.setError("Vérifeir  ");
                    }
                    else
                    {
                        if (testInteger(editText.getText().toString()))
                            listeValeurInteger.set(position, Integer.parseInt(editText.getText().toString()));
                        else editText.setError("Vérifeir  ");
                    }
                }

                @Override
                public void afterTextChanged(Editable s) {

                }
            });
            return convertView ;
        }

    }

    public View getViewByPosition(int pos, ListView listView) {
        final int firstListItemPosition = listView.getFirstVisiblePosition();
        final int lastListItemPosition = firstListItemPosition + listView.getChildCount() - 1;

        if (pos < firstListItemPosition || pos > lastListItemPosition ) {
            return listView.getAdapter().getView(pos, null, listView);
        } else {
            final int childIndex = pos - firstListItemPosition;
            return listView.getChildAt(childIndex);
        }
    }

void getListeValeur()
{
    intListValeur();
    View view ;
    for (int i = 0 ;  i<listLebelProduit.size()  ; i ++ )
    {
        view = getViewByPosition(i,listView) ;
        EditText editText =view.findViewById(R.id.cnt) ;
        if (testInteger(editText.getText().toString()))
        {
           listeValeurInteger.set(i,Integer.parseInt(editText.getText().toString())) ;
        }
        if (testDouble(editText.getText().toString()))
        {
            listeValeurDouble.set(i,Double.parseDouble(editText.getText().toString()));
        }
    }
}
   }
